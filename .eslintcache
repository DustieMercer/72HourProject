[{"/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/index.js":"1","/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/reportWebVitals.js":"2","/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/App.js":"3","/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/components/Satellite.js":"4","/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/components/Restaurants.js":"5","/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/components/weather/Weather.jsx":"6"},{"size":547,"mtime":1612754248281,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1612754248282,"results":"9","hashOfConfig":"8"},{"size":1499,"mtime":1612900773936,"results":"10","hashOfConfig":"8"},{"size":2455,"mtime":1612920270310,"results":"11","hashOfConfig":"8"},{"size":1101,"mtime":1612754330681,"results":"12","hashOfConfig":"8"},{"size":2034,"mtime":1612754330686,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"uszq2i",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/index.js",[],["30","31"],"/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/reportWebVitals.js",[],"/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/App.js",[],"/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/components/Satellite.js",["32","33","34","35"],"import React, {useState, useEffect} from 'react';\nimport {\n    Card,\n    CardImg,\n    Spinner,\n    CardTitle,\n    CardText,\n  } from \"reactstrap\";\n\nconst Satellite = (props) => {\n    let key = \"api_key=IAKc6eAJsmS3Vv4fVPuGd75NoRMbux6Gk8RBjqE7\";\n    let url = `https://api.nasa.gov/planetary/earth/imagery?lon=${props.longitude}&lat=${props.latitude}&dim=0.1&date=2020-12-25&${key}`\n\n    const [error, setError] = useState(null);\n    const [image, setImage] = useState(\"\");\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        if (props.latitude !=0 && props.longitude != 0) {\n            fetch(url)\n                .then((res) => res.blob())\n                .then((satBlob) => {\n                    setImage(URL.createObjectURL(satBlob));\n                })\n                .catch((error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n        }\n        setIsLoaded(true)\n    }, [props.latitude, props.longitude]);\n    \n    function loadHandling() {\n        if (error) {\n            return <div>Error: {error.message}</div>;\n          } else if (!isLoaded) {\n            return <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />;\n          } else {\n            return (\n                <div>\n                    <CardImg top width=\"100%\" object-fit=\"cover\" src={image} alt=\"Card image cap\" />\n                    <CardText>Hello from space!</CardText>\n                </div>\n            );\n          }\n    }\n\n    return (\n        <Card>\n            {loadHandling()}\n        </Card>\n    );\n}\n \nexport default Satellite;\n\n// const Satellite = (props) => {\n//     const [image, setImage] = useState([]);\n\n//     const fetchImage = () => {\n//         if(props.latitude === undefined || props.longitude === undefined){\n//             return\n//         }\n    \n//         let key = \"api_key=IAKc6eAJsmS3Vv4fVPuGd75NoRMbux6Gk8RBjqE7\";\n//         let url = `https://api.nasa.gov/planetary/earth/imagery?lon=${props.longitude}&lat=${props.latitude}&date=2020-12-25&${key}`\n//         fetch (url)\n//         .then(res => {\n//             setImage(res.url);\n//             console.log(res);\n//         })\n//     }\n\n//     useEffect(() => {\n//         fetchImage();\n//     }, []);\n\n// {(props.latitude === undefined || props.longitude === undefined) ? \n//     null\n//     : <CardImg top width=\"100%\" object-fit=\"cover\" src={image} alt=\"Card image cap\" /> }","/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/components/Restaurants.js",["36","37","38"],"import React, { useEffect, useState } from \"react\";\nimport { CardColumns } from \"reactstrap\";\n\nconst Restaurants = () => {\n  const [restaurant, setRestaurants] = useState([]);\n  function fetchRestaurants() {\n    const url = \"https://developers.zomato.com/api/v2.1/search?q=mexican&lat=39.694564799999995&lon=86.01008399999999&sort=rating&order=asc\";\n    fetch(url, {\n      method: 'GET',\n      headers: new Headers ({\n          'Content-Type': 'application/json',\n          'user-key': '086f4acd1c802fc5c003088ca3060580'\n      })\n  }) .then((res) => res.json())\n      .then((json) => {\n        setRestaurants(json.results);\n        console.log(JSON.stringify(json));\n      });\n  } \n\n\n  useEffect(() => {\n    fetchRestaurants();\n}, []);\n\n  /*function displayCards() {\n    return characters.length > 0\n      ? characters.map((character) => <MortyChild mortyCharacter = {character} />)\n      : null;\n  }*/\n  return (\n    <div>\n      <button onClick={fetchRestaurants()}>Search Catergory</button>\n\n      {/*<CardColumns>{displayCards()}</CardColumns>*/}\n    </div>\n  );\n};\n\n\n\n\n\nexport default Restaurants;","/Users/AHDR/Desktop/ElevenFiftyProjects/blueBadge/projects/3DayProject/72HourProject/src/components/weather/Weather.jsx",["39","40","41","42","43","44","45","46","47","48","49"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardTitle,\n  Button,\n  CardText,\n  ButtonDropdown, \n  DropdownToggle, \n  DropdownMenu, \n  DropdownItem\n} from \"reactstrap\";\nimport sunIcon from \"../assets/sunIcon.png\";\n\nconst baseurl = \"http://api.openweathermap.org/data/2.5/weather?lat=\";\nconst connector1 = \"&lon=\";\nconst connectorFahrenheit = \"&units=imperial&appid=\";\nconst connectorCelcius = \"&units=metric&appid=\";\nconst key = \"ab1be4aaa1e6745f9fcc41dbcf72d429\";\n\nconst WeatherChild = () => {\n  const [fahrenheit, setFahrenheit] = useState(\"\");\n  const [celcius, setCelcius] = useState(\"\");\n  const [toggle, setToggle] = useState(false);\n\n  const GetWeatherFahrenheit = () => {\n    const lat = \"45.5808\";\n    const lon = \"-73.5825\";\n    const fahrenheitURL = baseurl + lat + connector1 + lon + connectorFahrenheit + key;\n    console.log(fahrenheitURL);\n\n    fetch(fahrenheitURL)\n      .then((response) => {\n        console.log(\"resolved:\", response);\n        return response.json();\n      })\n      .then((data) => {\n        setFahrenheit(data.main.temp);\n        console.log(fahrenheit);\n      })\n      .catch((err) => {\n        console.log(\"rejected:\", err);\n      });\n\n    //   const GetWeatherCelcius = () => {\n    //     const lat = \"45.5808\";\n    //     const lon = \"-73.5825\";\n    //     const celciusURL = baseurl + lat + connector1 + lon + connectorCelcius + key;\n    //     console.log(celciusURL);\n    \n    //     fetch(celciusURL)\n    //       .then((response) => {\n    //         console.log(\"resolved:\", response);\n    //         return response.json();\n    //       })\n    //       .then((data) => {\n    //         setCelcius(data.main.temp);\n    //         console.log(celcius);\n    //       })\n    //       .catch((err) => {\n    //         console.log(\"rejected:\", err);\n    //       });\n  };\n\n  return (\n    <Card>\n      <CardImg src={sunIcon} />\n      <CardTitle>Weather</CardTitle>\n    <Button>{GetWeatherFahrenheit}</Button>\n    </Card>\n  );\n};\n\nexport default WeatherChild;\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":6,"column":5,"nodeType":"56","messageId":"57","endLine":6,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":19,"column":28,"nodeType":"60","messageId":"61","endLine":19,"endColumn":30},{"ruleId":"58","severity":1,"message":"59","line":19,"column":51,"nodeType":"60","messageId":"61","endLine":19,"endColumn":53},{"ruleId":"62","severity":1,"message":"63","line":32,"column":8,"nodeType":"64","endLine":32,"endColumn":41,"suggestions":"65"},{"ruleId":"54","severity":1,"message":"66","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":21},{"ruleId":"54","severity":1,"message":"67","line":5,"column":10,"nodeType":"56","messageId":"57","endLine":5,"endColumn":20},{"ruleId":"68","severity":1,"message":"69","line":8,"column":5,"nodeType":"70","messageId":"71","endLine":14,"endColumn":11,"fix":"72"},{"ruleId":"54","severity":1,"message":"73","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"54","severity":1,"message":"74","line":7,"column":3,"nodeType":"56","messageId":"57","endLine":7,"endColumn":11},{"ruleId":"54","severity":1,"message":"75","line":8,"column":3,"nodeType":"56","messageId":"57","endLine":8,"endColumn":17},{"ruleId":"54","severity":1,"message":"76","line":9,"column":3,"nodeType":"56","messageId":"57","endLine":9,"endColumn":17},{"ruleId":"54","severity":1,"message":"77","line":10,"column":3,"nodeType":"56","messageId":"57","endLine":10,"endColumn":15},{"ruleId":"54","severity":1,"message":"78","line":11,"column":3,"nodeType":"56","messageId":"57","endLine":11,"endColumn":15},{"ruleId":"54","severity":1,"message":"79","line":18,"column":7,"nodeType":"56","messageId":"57","endLine":18,"endColumn":23},{"ruleId":"54","severity":1,"message":"80","line":23,"column":10,"nodeType":"56","messageId":"57","endLine":23,"endColumn":17},{"ruleId":"54","severity":1,"message":"81","line":23,"column":19,"nodeType":"56","messageId":"57","endLine":23,"endColumn":29},{"ruleId":"54","severity":1,"message":"82","line":24,"column":10,"nodeType":"56","messageId":"57","endLine":24,"endColumn":16},{"ruleId":"54","severity":1,"message":"83","line":24,"column":18,"nodeType":"56","messageId":"57","endLine":24,"endColumn":27},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'CardTitle' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'CardColumns' is defined but never used.","'restaurant' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"87","text":"88"},"'useEffect' is defined but never used.","'CardText' is defined but never used.","'ButtonDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'connectorCelcius' is assigned a value but never used.","'celcius' is assigned a value but never used.","'setCelcius' is assigned a value but never used.","'toggle' is assigned a value but never used.","'setToggle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},[534,536],".","Update the dependencies array to be: [props.latitude, props.longitude, url]",{"range":"91","text":"92"},[976,1009],"[props.latitude, props.longitude, url]"]